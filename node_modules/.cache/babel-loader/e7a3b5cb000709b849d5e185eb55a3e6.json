{"ast":null,"code":"export function getSize(scrollbar) {\n  var containerEl = scrollbar.containerEl,\n      contentEl = scrollbar.contentEl;\n  var containerStyles = getComputedStyle(containerEl);\n  var paddings = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight'].map(function (prop) {\n    return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n  });\n  var verticalPadding = paddings[0] + paddings[1];\n  var horizontalPadding = paddings[2] + paddings[3];\n  return {\n    container: {\n      // requires `overflow: hidden`\n      width: containerEl.clientWidth,\n      height: containerEl.clientHeight\n    },\n    content: {\n      // border width and paddings should be included\n      width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n      height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding\n    }\n  };\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,OAAV,CAAkBC,SAAlB,EAAwC;EAE1C;EAAA,IACAC,+BADA;EAIF,IAAMC,eAAe,GAAGC,gBAAgB,CAACC,WAAD,CAAxC;EACA,IAAMC,QAAQ,GAAG,CACf,YADe,EAEf,eAFe,EAGf,aAHe,EAIf,cAJe,EAKfC,GALe,CAKX,gBAAI;IACR,OAAOJ,eAAe,CAACK,IAAD,CAAf,GAAwBC,UAAU,CAACN,eAAe,CAACK,IAAD,CAAhB,CAAlC,GAA4D,CAAnE;EACD,CAPgB,CAAjB;EAQA,IAAME,eAAe,GAAGJ,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAA9C;EACA,IAAMK,iBAAiB,GAAGL,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAhD;EAEA,OAAO;IACLM,SAAS,EAAE;MACT;MACAC,KAAK,EAAER,WAAW,CAACS,WAFV;MAGTC,MAAM,EAAEV,WAAW,CAACW;IAHX,CADN;IAMLC,OAAO,EAAE;MACP;MACAJ,KAAK,EAAEX,SAAS,CAACgB,WAAV,GAAwBhB,SAAS,CAACY,WAAlC,GAAgDZ,SAAS,CAACiB,WAA1D,GAAwER,iBAFxE;MAGPI,MAAM,EAAEb,SAAS,CAACkB,YAAV,GAAyBlB,SAAS,CAACc,YAAnC,GAAkDd,SAAS,CAACmB,YAA5D,GAA2EX;IAH5E;EANJ,CAAP;AAYD","names":["getSize","scrollbar","contentEl","containerStyles","getComputedStyle","containerEl","paddings","map","prop","parseFloat","verticalPadding","horizontalPadding","container","width","clientWidth","height","clientHeight","content","offsetWidth","scrollWidth","offsetHeight","scrollHeight"],"sources":["C:\\Users\\Martin\\Desktop\\portfolio\\node_modules\\smooth-scrollbar\\src\\geometry\\get-size.ts"],"sourcesContent":["import * as I from '../interfaces/';\n\nexport function getSize(scrollbar: I.Scrollbar): I.ScrollbarSize {\n  const {\n    containerEl,\n    contentEl,\n  } = scrollbar;\n\n  const containerStyles = getComputedStyle(containerEl);\n  const paddings = [\n    'paddingTop',\n    'paddingBottom',\n    'paddingLeft',\n    'paddingRight',\n  ].map(prop => {\n    return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n  });\n  const verticalPadding = paddings[0] + paddings[1];\n  const horizontalPadding = paddings[2] + paddings[3];\n\n  return {\n    container: {\n      // requires `overflow: hidden`\n      width: containerEl.clientWidth,\n      height: containerEl.clientHeight,\n    },\n    content: {\n      // border width and paddings should be included\n      width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n      height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}